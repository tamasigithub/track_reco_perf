#!/usr/bin/env bash

# Christof Sauer, 2019

# check if at least one argument has been provided
if [ $# -eq 0 ]
  then
    echo "no arguments supplied"
fi

echo "Convert tikz pictures generated by ROOT to compilable LaTex code."

# create temprary file (skeleton for standalone tex file)
mk_body_file () {
/bin/cat <<EOM >.body.tex
% !TEX TS-program = pdflatex
% !TEX encoding = UTF-8 Unicode
\documentclass[border=0mm]{standalone}
% packages
\usepackage{tikz}
\usetikzlibrary{patterns}
\usepackage{amsmath,amssymb}
\usepackage{bm}
\usepackage{pgfplots}
\pgfplotsset{compat=1.15}
% start document
\begin{document}
% generated by ROOT (CERN)
<!>PLACE_CODE_HERE<!>
% end document
\end{document}
EOM
}

echo 

# loop over all files
for file in "$@"; do

  # check file extension
  if [[ $file != *.tex ]]; then
    echo "Warning: file $file is not a tex file"
    echo "Skipping this file"
    continue
  fi

  # changed file flag
  changed_file=false
  # create a temporary file
  mk_body_file
  BODY_FILE=".body.tex"

  # check if all lines in '.body.tex' are contained in input files '*.tex'
  INCLUDED=$(comm -13 <(sort -u $file) <(sort -u $BODY_FILE))

  # if INCLUDED is empty, then all lines from '.body.tex' are included in 'file'
  if [ "$INCLUDED" == "<!>PLACE_CODE_HERE<!>" ]; then
     # INCLUDED is empty
     # do nothing
     echo "Info: body is already included"
  else
     # INCLUDED is not empty
     # add to body
     sed -e '/<!>PLACE_CODE_HERE<!>/ {' -e 'r '$file'' -e 'd' -e '}' -i $BODY_FILE
     echo "Info: added body to file: $file"
     changed_file=true
  fi

  ###########################################
  #             ADD STUFF HERE              #
  ###########################################

  # now search and replace (order important!)
  # units
  sed -i -e 's@\[a.u.\]@\~\[a.u.\]@g' $BODY_FILE
  sed -i -e 's@\[rad@\~\[\\text{rad}@g' $BODY_FILE
  sed -i -e 's@\[mm@\~\[\\text{mm}@g' $BODY_FILE
  sed -i -e 's@\[cm@\~\[\\text{cm}@g' $BODY_FILE
  sed -i -e 's@cm@\\text{~cm}@g' $BODY_FILE
  sed -i -e 's@\[meV\]@\~\[meV\]@g' $BODY_FILE
  sed -i -e 's@\[MeV\]@\~\[MeV\]@g' $BODY_FILE
  sed -i -e 's@\[GeV\]@\~\[GeV\]@g' $BODY_FILE
  sed -i -e 's@\[TeV\]@\~\[TeV\]@g' $BODY_FILE
  sed -i -e 's@\[fb\]@\~\[fb\]@g' $BODY_FILE
  sed -i -e 's@\[GeV\/c\]@\~\[GeV\/c\]@g' $BODY_FILE
  sed -i -e 's@meV@\\text{meV}@g' $BODY_FILE
  sed -i -e 's@MeV@\\text{MeV}@g' $BODY_FILE
  sed -i -e 's@GeV@\\text{GeV}@g' $BODY_FILE
  sed -i -e 's@TeV@\~\\text{TeV}@g' $BODY_FILE
  sed -i -e 's@event\/cm@\\text{event\/cm}@g' $BODY_FILE
  # words
  sed -i -e 's@jets@\\text{jets~}@g' $BODY_FILE
  sed -i -e 's@jet@\\text{jet~}@g' $BODY_FILE
  sed -i -e 's@Signal@\\text{Signal~}@g' $BODY_FILE
  sed -i -e 's@signal@\\text{signal~}@g' $BODY_FILE
  sed -i -e 's@Background@\\text{Background~}@g' $BODY_FILE
  sed -i -e 's@background@\\text{background~}@g' $BODY_FILE
  sed -i -e 's@Efficiency@\\text{Efficiency~}@g' $BODY_FILE
  sed -i -e 's@efficiency@\\text{efficiency~}@g' $BODY_FILE
  sed -i -e 's@_{T@_{\\text{T}@g' $BODY_FILE
  sed -i -e 's@deltadca@delta dca@g' $BODY_FILE
  sed -i -e 's@deltaz@delta z@g' $BODY_FILE
  sed -i -e 's@deltap@delta p@g' $BODY_FILE
  sed -i -e 's@1k@\\text{1k}@g' $BODY_FILE
  # added by tamasi
  #sed -i -e 's@, H1H2@,\~H1H2@g' $BODY_FILE
  sed -i -e 's@=  0.0@=\~\~0.0@g' $BODY_FILE
  sed -i -e 's@=  1.0@=\~\~1.0@g' $BODY_FILE
  sed -i -e 's@=  2.0@=\~\~2.0@g' $BODY_FILE
  sed -i -e 's@=  2.5@=\~\~2.5@g' $BODY_FILE
  sed -i -e 's@=  3.0@=\~\~3.0@g' $BODY_FILE
  sed -i -e 's@leading@\~\\text{leading}@g' $BODY_FILE
  sed -i -e 's@sub\-@\\text{sub}\~\-@g' $BODY_FILE
  sed -i -e 's@wwbar@bar@g' $BODY_FILE
  sed -i -e 's@sum_@sum\\limits_@g' $BODY_FILE
  sed -i -e 's@threshold@\\text{~threshold}@g' $BODY_FILE
  sed -i -e 's@thr\.@\\text{~thr\.}@g' $BODY_FILE
  sed -i -e 's@Hit occupancy @\\text{Hit occupancy }@g' $BODY_FILE
  # derivatives
  sed -i -e 's@d\\sigma@\\text{d}\\sigma@g' $BODY_FILE
  sed -i -e 's@dE@\\text{d}E@g' $BODY_FILE

  # rename and remove temprary files (if it has been changed)
  if $changed_file; then
    mv $BODY_FILE $file
  fi

done

